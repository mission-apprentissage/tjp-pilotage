version: "2.4"
services:
  reverse_proxy:
    image: pilotage_reverse_proxy
    container_name: pilotage_reverse_proxy
    build:
      context: reverse_proxy
    mem_limit: 256m
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    networks:
      - pilotage_network
    depends_on:
      - server
      - ui
    environment:
      - PARANOIA=1
      - ANOMALY_INBOUND=5
      - ANOMALY_OUTBOUND=4
      - REPORTING_LEVEL=4
      - DNS_SERVER=127.0.0.11
      - PROXY=1
      - SERVERNAME=localhost
      - ACCESSLOG=/data/access.log
      - ERRORLOG=/data/error.log
      - LOGLEVEL=warn
      - NGINX_ALWAYS_TLS_REDIRECT=false
      - ALLOWED_METHODS=GET HEAD POST OPTIONS PUT DELETE

  ui:
    image: pilotage_ui
    container_name: pilotage_ui
    build:
      context: .
      dockerfile: ui/Dockerfile
    mem_limit: 256m
    networks:
      - pilotage_network
    depends_on:
      - server
    environment:
      - SERVER_URI=http://server:5000

  server:
    image: pilotage_server
    container_name: pilotage_server
    build:
      context: .
      dockerfile: server/Dockerfile
    mem_limit: 1g
    restart: unless-stopped
    networks:
      - pilotage_network
    depends_on:
      - postgres
    environment:
      - PILOTAGE_LOG_DESTINATIONS=stdout,mongodb

  postgres:
      image: postgres:14.2
      container_name: pilotage_postgres
      restart: unless-stopped
      networks:
        - pilotage_network
      volumes:
        - pilotage_postgres_data:/var/lib/postgresql/data:z
      

networks:
  pilotage_network:
    name: pilotage_network
